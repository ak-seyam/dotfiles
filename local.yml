- hosts: localhost
  connection: local
  become: true
  vars:
    username: 'unstable'
    slack_version: '4.28.184'
    home_dir: '/home/{{ username }}'
    downloads_dir: '{{ home_dir }}/Downloads'
    conf_dir: '{{ home_dir }}/.config'
    idea_version: 'IdeaIC2022.2'
    idea_download_version: 'ideaIC-2022.2'
    idea_minro_version: '3'
  roles:
  - role: gantsign.visual-studio-code
    users:
      - username: '{{ username }}'
        visual_studio_code_extensions:
          - vscodevim.vim
          - golang.Go

  - role: gantsign.postman
  - role: darkwizard242.googlechrome

  tasks:
    - name: Install apt-transport-https
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - lsb-release
          - gnupg
        state: latest
        update_cache: true

    - name: Add signing key (Docker)
      apt_key:
        url: 'https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg'
        state: present

    - name: Add repository into sources list (Docker)
      apt_repository:
        repo: "deb [arch={{ ansible_architecture }}] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
        state: present
        filename: docker
    
    - name: Add repository into sources list (GoLang)
      apt_repository:
        repo: "ppa:longsleep/golang-backports"

    - name: Add signing key (Spotify)
      apt_key:
        url: https://download.spotify.com/debian/pubkey_5E3C45D7B312C643.gpg
        state: present
    
    
    - name: Add repository into sources list (Spotify)
      apt_repository:
        repo: "deb http://repository.spotify.com stable non-free"
        state: present
        filename: spotify

    - name: Installing Software
      apt:
        name:
          - docker
          - docker.io
          - docker-compose
          - docker-registry
          - htop
          - dbus-x11
          - neovim
          - tmux
          - fish
          - openjdk-11-jdk
          - openjdk-17-jdk
          - maven
          - curl
          - build-essential
          - ansible
          - gnome-tweaks
          - spotify-client
          - gparted
          - mpv
          - golang-go
        state: latest
        update_cache: true

    - name: Update user config
      user:
        name: '{{ username }}'
        shell: /usr/bin/fish
        groups:
          - docker 
        append: yes
    - name: Download dconf config
      get_url:
        url: 'https://raw.githubusercontent.com/A-Siam/dotfiles/ubuntu/dconf/dconf.ini'
        dest: '/home/{{ username }}/dconf.ini'
        group: '{{ username }}'
        owner: '{{ username }}'

    - name: Create fish config if not exist
      file:
        path: '{{ conf_dir }}/fish'
        owner: '{{ username }}'
        group: '{{ username }}'
        state: directory
        recurse: yes

    - name: Config fish shell
      get_url:
        url: 'https://raw.githubusercontent.com/A-Siam/dotfiles/ubuntu/fish/config.fish'
        dest: '{{ conf_dir }}/fish'
        group: '{{ username }}'
        owner: '{{ username }}'

    - name: Set editor
      command: 'update-alternatives --set editor /usr/bin/nvim'

    - name: Download IntelliJ
      get_url:
        url: 'https://download-cdn.jetbrains.com/idea/{{ idea_download_version }}.{{ idea_minro_version }}.tar.gz'
        dest: '{{ downloads_dir }}/ideaIC-2022.2.{{ idea_minro_version }}.tar.gz'
        owner: '{{ username }}'
        group: '{{ username }}'

    - name: UnArchive IntelliJ
      unarchive:
        src: '{{ downloads_dir }}/ideaIC-2022.2.{{ idea_minro_version }}.tar.gz'
        dest: '{{ home_dir }}/bin/idea'
      
    - name: Download slack
      get_url: 
        url: 'https://downloads.slack-edge.com/releases/linux/{{ slack_version }}/prod/x64/slack-desktop-{{ slack_version }}-amd64.deb'
        dest: '{{ downloads_dir }}/slack-desktop-{{ slack_version }}-amd64.deb'
        owner: '{{ username }}'
        group: '{{ username }}'

    - name: Install slack package
      command: 'apt install {{ downloads_dir }}/slack-desktop-{{ slack_version }}-amd64.deb'

    - name: Make Idea config if not exist
      file:
        path: "{{ conf_dir }}/JetBrains/{{ idea_version }}/options"
        state: directory
        owner: '{{ username }}'
        group: '{{ username }}'
        recurse: yes


    - name: Copy idea config
      get_url:
        url: 'https://raw.githubusercontent.com/A-Siam/dotfiles/ubuntu/JetBrains/{{ idea_version }}/options/terminal.xml'
        dest: '{{ conf_dir }}/JetBrains/{{ idea_version }}/options/terminal.xml'
        force: yes
        owner: '{{ username }}'
        group: '{{ username }}'

    - name: Add tmux config
      get_url: 
        url: 'https://raw.githubusercontent.com/A-Siam/dotfiles/ubuntu/tmux/.tmux.conf'
        dest: '{{ home_dir }}/.tmux.conf'
        force: yes
        owner: '{{ username }}'
        group: '{{ username }}'
    - name: Add .xprofile
      get_url: 
        url: 'https://raw.githubusercontent.com/A-Siam/dotfiles/ubuntu/xprofile/.xprofile'
        dest: '{{ home_dir }}/.xprofile'
        force: yes
        owner: '{{ username }}'
        group: '{{ username }}'
