- hosts: localhost
  connection: local
  become: true
  vars:
    username: 'unstable'
    home_dir: '/home/{{ username }}'
    downloads_dir: '{{ home_dir }}/Downloads'
    conf_dir: '{{ home_dir }}/.config'
    idea_version: 'IdeaIC2022.2'
    idea_download_version: 'ideaIC-2022.2'
    idea_minro_version: '3'
    idea_dir: '/opt'
    idea_extract_version: 'idea-IC-222.4345.14'
    jpa_buddy_download_url: 'https://plugins.jetbrains.com/files/15075/251505/jpa-buddy-2022.4.6-222.zip'
    jpa_buddy_file_name: 'jpa-buddy-2022.4.6-222.zip'
    idea_vim_download_url: 'https://plugins.jetbrains.com/files/164/208284/IdeaVim-1.11.1.zip'
    idea_vim_file_name: 'IdeaVim-1.11.1.zip'
    one_dark_download_url: 'https://plugins.jetbrains.com/files/11938/250297/one-dark-theme-5.7.1.zip'
    one_dark_file_name: 'one-dark-theme-5.7.1.zip'

  roles:
  - role: gantsign.visual-studio-code
    users:
      - username: '{{ username }}'
        visual_studio_code_extensions:
          - vscodevim.vim
          - golang.Go
  - role: gantsign.postman

  tasks:
    - name: Adding repository (Docker)
      shell: dnf config-manager -y --add-repo https://download.docker.com/linux/fedora/docker-ce.repo

    - name: Enable the RPM Fusion repository
      dnf:
        name: 
          - "https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-{{ ansible_distribution_major_version }}.noarch.rpm"
          - "https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-{{ ansible_distribution_major_version }}.noarch.rpm"
        state: present
  
    - name: Install the 'Development tools' package group
      ansible.builtin.dnf:
        name: '@Development tools'

    - name: Installing Software
      dnf:
        name:
          - docker-ce 
          - docker-ce-cli 
          - containerd.io
          - python-pip
          - docker-compose-plugin
          - htop
          - neovim
          - tmux
          - fish
          - java-1.8.0-openjdk-devel
          - java-11-openjdk-devel
          - java-17-openjdk-devel
          - maven
          - curl
          - gparted
          - golang

    - name: Update user config
      user:
        name: '{{ username }}'
        shell: /usr/bin/fish
        groups:
          - docker 
        append: yes
    - name: Download dconf config
      get_url:
        url: 'https://raw.githubusercontent.com/A-Siam/dotfiles/fedora/dconf/dconf.ini'
        dest: '/home/{{ username }}/dconf.ini'
        group: '{{ username }}'
        owner: '{{ username }}'

    - name: Create fish config if not exist
      file:
        path: '{{ conf_dir }}/fish'
        owner: '{{ username }}'
        group: '{{ username }}'
        state: directory
        recurse: yes

    - name: Config fish shell
      get_url:
        url: 'https://raw.githubusercontent.com/A-Siam/dotfiles/fedora/fish/config.fish'
        dest: '{{ conf_dir }}/fish'
        group: '{{ username }}'
        owner: '{{ username }}'

    - name: Craete environment dir
      file:
        path: '{{conf_dir}}/environment.d'
        state: directory
        owner: '{{ username }}'
        group: '{{ username }}'
        recurse: yes

    - name: Config Env variables
      get_url:
        url: 'https://raw.githubusercontent.com/A-Siam/dotfiles/fedora/environment.d/envvars.conf'
        dest: '{{conf_dir}}/environment.d/envvars.conf'
        group: '{{ username }}'
        owner: '{{ username }}'

    - name: Download IntelliJ
      get_url:
        url: 'https://download-cdn.jetbrains.com/idea/{{ idea_download_version }}.{{ idea_minro_version }}.tar.gz'
        dest: '{{ downloads_dir }}/ideaIC-2022.2.{{ idea_minro_version }}.tar.gz'
        owner: '{{ username }}'
        group: '{{ username }}'

    - name: UnArchive IntelliJ
      unarchive:
        src: '{{ downloads_dir }}/ideaIC-2022.2.{{ idea_minro_version }}.tar.gz'
        dest: '{{ idea_dir }}'

    - name: Make nvim config dir
      file:
        path: "{{ conf_dir }}/nvim"
        state: directory
        owner: '{{ username }}'
        group: '{{ username }}'
        recurse: yes

    - name: Ignore case in vim
      copy:
        dest: '{{ conf_dir }}/nvim/init.vim'
        content: |
          set ignorecase
          set number
          set rnu

    - name: Create idea desktop entry
      copy:
        dest: '/usr/share/applications/jetbrains-idea-ce.desktop'
        content: |
          [Desktop Entry]
          Version=1.0
          Type=Application
          Name=IntelliJ IDEA Community Edition
          Icon={{ idea_dir }}/{{ idea_extract_version }}/bin/idea.svg
          Exec="{{ idea_dir }}/{{ idea_extract_version }}/bin/idea.sh" %f
          Comment=Capable and Ergonomic IDE for JVM
          Categories=Development;IDE;
          Terminal=false
          StartupWMClass=jetbrains-idea-ce
          StartupNotify=true
      
    - name: Make Idea config if not exist
      file:
        path: "{{ conf_dir }}/JetBrains/{{ idea_version }}/options"
        state: directory
        owner: '{{ username }}'
        group: '{{ username }}'
        recurse: yes


    - name: Copy idea config (For terminal)
      get_url:
        url: 'https://raw.githubusercontent.com/A-Siam/dotfiles/ubuntu/JetBrains/{{ idea_version }}/options/terminal.xml'
        dest: '{{ conf_dir }}/JetBrains/{{ idea_version }}/options/terminal.xml'
        force: yes
        owner: '{{ username }}'
        group: '{{ username }}'

    - name: copy idea config (for ui)
      get_url:
        url: 'https://raw.githubusercontent.com/A-Siam/dotfiles/ubuntu/JetBrains/{{ idea_version }}/options/ui.Ilnf.xml'
        dest: '{{ conf_dir }}/jetbrains/{{ idea_version }}/options/ui.Ilnf.xml'
        force: yes
        owner: '{{ username }}'
        group: '{{ username }}'

    - name: copy idea config (for fonts)
      get_url:
        url: 'https://raw.githubusercontent.com/A-Siam/dotfiles/ubuntu/JetBrains/{{ idea_version }}/options/editor-font.xml'
        dest: '{{ conf_dir }}/jetbrains/{{ idea_version }}/options/editor-font.xml'
        force: yes
        owner: '{{ username }}'
        group: '{{ username }}'
          

    - name: Link /usr/bin/idea to idea.sh
      file:
        src: '{{ idea_dir }}/{{ idea_extract_version }}/bin/idea.sh'
        dest: '/usr/bin/idea'
        state: link

    - name: Download JPA buddy IDEA plugin
      get_url: 
        url: '{{ jpa_buddy_download_url }}'
        dest: '{{ downloads_dir }}/{{ jpa_buddy_file_name }}'
        owner: '{{ username }}'
        group: '{{ username }}'

    - name: Download IDEAVim plugin
      get_url:
        url: '{{ idea_vim_download_url }}'
        dest: '{{ downloads_dir }}/{{ idea_vim_file_name }}'
        owner: '{{ username }}'
        group: '{{ username }}'

    - name: Download OneDark Theme
      get_url:
        url: '{{ one_dark_download_url }}'
        dest: '{{ downloads_dir }}/{{ one_dark_file_name }}'
        owner: '{{ username }}'
        group: '{{ username }}'

    - name: Create Idea plugins dir
      file:
        path: '/home/{{ username }}/.local/share/JetBrains/{{ idea_version }}' 
        state: directory
        owner: '{{ username }}'
        group: '{{ username }}'
        recurse: yes

    - name: Install JPA buddy 
      unarchive:
        src: '{{ downloads_dir }}/{{ jpa_buddy_file_name }}'
        dest: '/home/{{ username }}/.local/share/JetBrains/{{ idea_version }}'
        owner: '{{ username }}'
        group: '{{ username }}'

    - name: Install IDEAVim
      unarchive:
        src: '{{ downloads_dir }}/{{ idea_vim_file_name }}'
        dest: '/home/{{ username }}/.local/share/JetBrains/{{ idea_version }}'
        owner: '{{ username }}'
        group: '{{ username }}'

    - name: Install one dark Theme
      unarchive:
        src: '{{ downloads_dir }}/{{ one_dark_file_name }}'
        dest: '/home/{{ username }}/.local/share/JetBrains/{{ idea_version }}'
        owner: '{{ username }}'
        group: '{{ username }}'

    - name: Make Idea config if not exist
      file:
        path: "{{ conf_dir }}/JetBrains/{{ idea_version }}/options"
        state: directory
        owner: '{{ username }}'
        group: '{{ username }}'
        recurse: yes


    - name: Copy idea config
      get_url:
        url: 'https://raw.githubusercontent.com/A-Siam/dotfiles/fedora/JetBrains/{{ idea_version }}/options/terminal.xml'
        dest: '{{ conf_dir }}/JetBrains/{{ idea_version }}/options/terminal.xml'
        force: yes
        owner: '{{ username }}'
        group: '{{ username }}'

    - name: Add tmux config
      get_url: 
        url: 'https://raw.githubusercontent.com/A-Siam/dotfiles/fedora/tmux/.tmux.conf'
        dest: '{{ home_dir }}/.tmux.conf'
        force: yes
        owner: '{{ username }}'
        group: '{{ username }}'
